library(RUVSeq)
library(EDASeq)
workingDir = "ruvseq";
setwd(workingDir); 

#row.names="Geneid" assumes that this column is the row names. Iff this is not wanted argument should be removed which will put numbers as row names. 

dex <- read.csv("alldata_geneasnumbers.txt", header=TRUE, sep="\t", row.names = "Geneid", stringsAsFactors = FALSE) #select geneid as index column
head(dex)
str(dex)
tail(dex)

# filtering out the ones with the count lower than 5
filter <- apply(dex, 1, function(x) length(x[x>5])>=18) 
filtered <- dex[filter,]
str(filtered)
head(filtered)
tail(filtered)

#This x variable needs to be changed depending on the conditions and it should be in the right order of column names
x <- as.factor(rep(c("flx", "cKO"), times=3, each=3))
x
set <- newSeqExpressionSet(as.matrix(filtered), phenoData = data.frame(x, row.names=colnames(filtered)))
        
#Visualizing before normalization
library(RColorBrewer)
colors <- brewer.pal(3, "Set2")
plotRLE(set, outline=FALSE, ylim=c(-4, 4), col=colors[x], main="Before normalization")
plotPCA(set, col=colors[x], cex=1.2,  main="Before normalization")

  #To find spike in genes 
design <- model.matrix(~x, data=pData(set))
y <- DGEList(counts=counts(set), group=x)
y <- calcNormFactors(y, method="upperquartile")
y <- estimateGLMCommonDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
fit <- glmFit(y, design)
lrt <- glmLRT(fit, coef=2)
top <- topTags(lrt, n=nrow(set))$table
empirical <- rownames(set)[which(!(rownames(set) %in% rownames(top)[1:5000]))]

#RUVg Estimating the factors of unwanted variation using control genes(spike in genes)
set <- betweenLaneNormalization(set, which="upper") # upper quantile normalization
set1 <- RUVg(set,empirical, k=3) 
pData(set1)
plotRLE(set1, outline=FALSE, ylim=c(-4, 4), col=colors[x], main="After RUVg normalization")
plotPCA(set1, col=colors[x], cex=1.2, main="After RUVg normalization")


#DE analysis
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData = counts(set1),
                              colData = pData(set1),
                              design = ~ W_1 +W_2 + W_3 + x)
dds <- DESeq(dds)
res <- results(dds)
res

#RUVs: Estimating the factors of unwanted variation using replicate samples
differences <- makeGroups(x)
differences

set3 <- RUVs(set, rownames(filtered), k=3, differences)
pData(set3)


#plot pca and rle
plotRLE(set3, outline=FALSE, ylim=c(-4, 4), col=colors[x], main="After RUVs normalization")
plotPCA(set3, col=colors[x], cex=1.2, main="After RUVs normalization")
df <- data.frame(set3)


#RUVr: Estimating the factors of unwanted variation using residuals
design <- model.matrix(~x, data=pData(set))
y <- DGEList(counts=counts(set), group=x)
y <- calcNormFactors(y, method="upperquartile")
y <- estimateGLMCommonDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
fit <- glmFit(y, design)
res <- residuals(fit, type="deviance")

set4 <- RUVr(set, rownames(filtered), k=3, res)
pData(set4)
plotRLE(set4, outline=FALSE, ylim=c(-4, 4), col=colors[x], main="After RUVr normalization")
plotPCA(set4, col=colors[x], cex=1.2, main="After RUVr normalization")

#this is to get normalized counts of whichever ruv suits your data best. 
#In this case it was RUVs, if it should be other ruvs the set variable should be changed accordingly(set1 or set4)
normalized_counts_ruvs <- normCounts(set4)

#export the normalized counts to desired path(path needs to be changed to your choice)
write.csv(normalized_counts_ruvs, "normalizedcountsRUVS.csv")
